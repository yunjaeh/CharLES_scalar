#ifndef GAUSS_QUADRATURE_HPP
#define GAUSS_QUADRATURE_HPP

namespace GaussQuadrature {
  
  // Gauss-Lobatto points and weights setup for default interval -1..1
  
  const double x1[1] = { 
    0.0 
  };
  const double w1[1] = { 
    2.0 
  };

  const double x2[2] = {
    -sqrt(3.0)/3.0,
    +sqrt(3.0)/3.0 
  };
  const double w2[2] = {
    1.0,
    1.0 
  };

  const double x3[3] = {
    0.0,
    -sqrt(3.0/5.0),
    +sqrt(3.0/5.0)
  };
  const double w3[3] = {
    8.0/9.0,
    5.0/9.0,
    5.0/9.0
  };
  
  const double x4[4] = {
    -sqrt((3.0-2.0*sqrt(6.0/5.0))/7.0),
    +sqrt((3.0-2.0*sqrt(6.0/5.0))/7.0),
    -sqrt((3.0+2.0*sqrt(6.0/5.0))/7.0),
    +sqrt((3.0+2.0*sqrt(6.0/5.0))/7.0)
  };

  const double w4[4] = {
    (18.0+sqrt(30.0))/36.0,
    (18.0+sqrt(30.0))/36.0,
    (18.0-sqrt(30.0))/36.0,
    (18.0-sqrt(30.0))/36.0
  };
  
  const double x5[5] = {
    0.0,
    -sqrt(5.0-2.0*sqrt(10.0/7.0))/3.0,
    +sqrt(5.0-2.0*sqrt(10.0/7.0))/3.0,	       
    -sqrt(5.0+2.0*sqrt(10.0/7.0))/3.0,
    +sqrt(5.0+2.0*sqrt(10.0/7.0))/3.0
  };

  const double w5[5] = {
    128.0/225.0,
    (322.0+13.0*sqrt(70.0))/900.0,
    (322.0+13.0*sqrt(70.0))/900.0,
    (322.0-13.0*sqrt(70.0))/900.0,
    (322.0-13.0*sqrt(70.0))/900.0
  };

  // tri integration rules...
  // note: each row is an integration point, last column is the weight

  const double tri3[3][4] = {
    { 2.0/3.0, 1.0/6.0, 1.0/6.0, 1.0/3.0 },
    { 1.0/6.0, 2.0/3.0, 1.0/6.0, 1.0/3.0 },
    { 1.0/6.0, 1.0/6.0, 2.0/3.0, 1.0/3.0 }
  };

  const double tri10[10][4] = {
    { 0.888871894660413, 0.055564052669793, 0.055564052669793, 0.041955512996649 },
    { 0.055564052669793, 0.888871894660413, 0.055564052669793, 0.041955512996649 },
    { 0.055564052669793, 0.055564052669793, 0.888871894660413, 0.041955512996649 },
    { 0.295533711735893, 0.634210747745723, 0.070255540518384, 0.112098412070887 },
    { 0.295533711735893, 0.070255540518384, 0.634210747745723, 0.112098412070887 },
    { 0.070255540518384, 0.295533711735893, 0.634210747745723, 0.112098412070887 },
    { 0.634210747745723, 0.295533711735893, 0.070255540518384, 0.112098412070887 },
    { 0.634210747745723, 0.070255540518384, 0.295533711735893, 0.112098412070887 },
    { 0.070255540518384, 0.634210747745723, 0.295533711735893, 0.112098412070887 },
    { 0.333333333333333, 0.333333333333333, 0.333333333333333, 0.201542988584730 }
  };
  
  // tet integration rules...
  // note: each row is an integration point, last column is the weight

#define A4 0.5854101966249680
#define B4 0.1381966011250110
  
  const double tet4[4][5] = {
    { A4, B4, B4, B4, 0.25 },
    { B4, A4, B4, B4, 0.25 },
    { B4, B4, A4, B4, 0.25 },
    { B4, B4, B4, A4, 0.25 }
  };
  
#undef A4
#undef B4
  

#define A10 0.7784952948213300
#define B10 0.0738349017262234
#define C10 0.4062443438840510
#define D10 0.0937556561159491
#define E10 0.0476331348432089
#define F10 0.1349112434378610

  const double tet10[10][5] = {
    { A10, B10, B10, B10, E10 },
    { B10, A10, B10, B10, E10 },
    { B10, B10, A10, B10, E10 },
    { B10, B10, B10, A10, E10 },
    { C10, C10, D10, D10, F10 },
    { C10, D10, C10, D10, F10 },
    { C10, D10, D10, C10, F10 },
    { D10, C10, C10, D10, F10 },
    { D10, C10, D10, C10, F10 },
    { D10, D10, C10, C10, F10 }
  };

#undef A10
#undef B10
#undef C10
#undef D10
#undef E10
#undef F10
  
#define A20 0.9029422158182680
#define B20 0.0323525947272439
#define C20 0.0070670747944695
#define D20 0.2626825838877790
#define E20 0.6165965330619370
#define F20 0.0603604415251421
#define G20 0.0469986689718877
#define H20 0.3097693042728620
#define I20 0.0706920871814129 
#define J20 0.1019369182898680

  const double tet20[20][5] = {

    { A20, B20, B20, B20, C20 },
    { B20, A20, B20, B20, C20 },
    { B20, B20, A20, B20, C20 },
    { B20, B20, B20, A20, C20 },

    { D20, E20, F20, F20, G20 },
    { E20, D20, F20, F20, G20 },
    { D20, F20, E20, F20, G20 },
    { E20, F20, D20, F20, G20 },
    { D20, F20, F20, E20, G20 },
    { E20, F20, F20, D20, G20 },
    { F20, D20, E20, F20, G20 },
    { F20, E20, D20, F20, G20 },
    { F20, D20, F20, E20, G20 },
    { F20, E20, F20, D20, G20 },
    { F20, F20, D20, E20, G20 },
    { F20, F20, E20, D20, G20 },

    { H20, H20, H20, I20, J20 },
    { H20, H20, I20, H20, J20 },
    { H20, I20, H20, H20, J20 },
    { I20, H20, H20, H20, J20 }

  };

#undef A20
#undef B20
#undef C20
#undef D20
#undef E20
#undef F20
#undef G20
#undef H20
#undef I20
#undef J20

};

#endif
